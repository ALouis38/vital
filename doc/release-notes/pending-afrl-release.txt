VITAL Release Notes for changes pending release approval by AFRL
================================================================

This file documents release notes for changes made to VITAL which require
public release approval from AFRL.  After approval, the changes and
corresponding notes below will be encorporated into a public numbered
release version, and the content of this file will be reset.

The VITAL set of libraries has beed created from previously publicly
released software, modifications to previously released software and
newly written software.

A large portion of VITAL is made up of the generic data types and
abstract algorithms taken from MAPTK. The following items have been
refactored and moved from MAPTK to VITAL.

- Algorithm plugin manager
- C and Python bindings
- basic exception classes
- basic data types needed to implement algorithms
- Abstract algorithm classes
- Algorithm configuration classes as modified for VITAL


The following has been taken from publicly available source code
copied from CMake project.

- kwiversys library which provides an OS Abstraction Layer


The following has been developed specifically for VITAL

- Support for logging diagnostics


The main goal of refactoring MAPTK source code into VITAL is to enable
building larger pipeline based applications using publicly released
sprokit toolkit for its pipeline architecture, MAPTK for its flexible
algorithm assemblies and VITAL providing the basic support services
and types.
